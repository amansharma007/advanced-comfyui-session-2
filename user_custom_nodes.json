[
  {
    "name": "ComfyUI_IPAdapter_plus",
    "url": "https://github.com/cubiq/ComfyUI_IPAdapter_plus",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "cubiq",
      "title": "ComfyUI_IPAdapter_plus",
      "id": "ipadapter",
      "reference": "https://github.com/cubiq/ComfyUI_IPAdapter_plus",
      "files": [
        "https://github.com/cubiq/ComfyUI_IPAdapter_plus"
      ],
      "preemptions": [
        "IPAAdapterFaceIDBatch",
        "IPAdapter",
        "IPAdapterAdvanced",
        "IPAdapterBatch",
        "IPAdapterClipVisionEnhancer",
        "IPAdapterClipVisionEnhancerBatch",
        "IPAdapterCombineEmbeds",
        "IPAdapterCombineParams",
        "IPAdapterCombineWeights",
        "IPAdapterEmbeds",
        "IPAdapterEmbedsBatch",
        "IPAdapterEncoder",
        "IPAdapterFaceID",
        "IPAdapterFromParams",
        "IPAdapterInsightFaceLoader",
        "IPAdapterLoadEmbeds",
        "IPAdapterMS",
        "IPAdapterModelLoader",
        "IPAdapterNoise",
        "IPAdapterPreciseComposition",
        "IPAdapterPreciseCompositionBatch",
        "IPAdapterPreciseStyleTransfer",
        "IPAdapterPreciseStyleTransferBatch",
        "IPAdapterPromptScheduleFromWeightsStrategy",
        "IPAdapterRegionalConditioning",
        "IPAdapterSaveEmbeds",
        "IPAdapterStyleComposition",
        "IPAdapterStyleCompositionBatch",
        "IPAdapterTiled",
        "IPAdapterTiledBatch",
        "IPAdapterUnifiedLoader",
        "IPAdapterUnifiedLoaderCommunity",
        "IPAdapterUnifiedLoaderFaceID",
        "IPAdapterWeights",
        "IPAdapterWeightsFromStrategy",
        "PrepImageForClipVision"
      ],
      "pip": [
        "insightface"
      ],
      "install_type": "git-clone",
      "description": "ComfyUI reference implementation for IPAdapter models. The code is mostly taken from the original IPAdapter repository and laksjdjf's implementation, all credit goes to them. I just made the extension closer to ComfyUI philosophy."
    },
    "nodes": [],
    "pip": [
      "insightface"
    ],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI_CatVTON_Wrapper",
    "url": "https://github.com/chflame163/ComfyUI_CatVTON_Wrapper",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "chflame163",
      "title": "ComfyUI_CatVTON_Wrapper",
      "id": "catvton-wrapper",
      "reference": "https://github.com/chflame163/ComfyUI_CatVTON_Wrapper",
      "files": [
        "https://github.com/chflame163/ComfyUI_CatVTON_Wrapper"
      ],
      "install_type": "git-clone",
      "description": "[a/CatVTON](https://github.com/Zheng-Chong/CatVTON) warpper for ComfyUI"
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "segment anything",
    "url": "https://github.com/storyicon/comfyui_segment_anything",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "storyicon",
      "title": "segment anything",
      "id": "sam",
      "reference": "https://github.com/storyicon/comfyui_segment_anything",
      "files": [
        "https://github.com/storyicon/comfyui_segment_anything"
      ],
      "install_type": "git-clone",
      "description": "Based on GroundingDino and SAM, use semantic strings to segment any element in an image. The comfyui version of sd-webui-segment-anything."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI Essentials",
    "url": "https://github.com/cubiq/ComfyUI_essentials",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "cubiq",
      "title": "ComfyUI Essentials",
      "id": "essentials",
      "reference": "https://github.com/cubiq/ComfyUI_essentials",
      "files": [
        "https://github.com/cubiq/ComfyUI_essentials"
      ],
      "install_type": "git-clone",
      "description": "Essential nodes that are weirdly missing from ComfyUI core. With few exceptions they are new features and not commodities. I hope this will be just a temporary repository until the nodes get included into ComfyUI."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "ComfyUI's ControlNet Auxiliary Preprocessors",
    "url": "https://github.com/Fannovel16/comfyui_controlnet_aux",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "Fannovel16",
      "title": "ComfyUI's ControlNet Auxiliary Preprocessors",
      "id": "comfyui_controlnet_aux",
      "reference": "https://github.com/Fannovel16/comfyui_controlnet_aux",
      "files": [
        "https://github.com/Fannovel16/comfyui_controlnet_aux"
      ],
      "preemptions": [
        "AIO_Preprocessor",
        "AnimalPosePreprocessor",
        "AnimeFace_SemSegPreprocessor",
        "AnimeLineArtPreprocessor",
        "BAE-NormalMapPreprocessor",
        "BinaryPreprocessor",
        "CannyEdgePreprocessor",
        "ColorPreprocessor",
        "DSINE-NormalMapPreprocessor",
        "DWPreprocessor",
        "DensePosePreprocessor",
        "DepthAnythingPreprocessor",
        "DiffusionEdge_Preprocessor",
        "FacialPartColoringFromPoseKps",
        "FakeScribblePreprocessor",
        "HEDPreprocessor",
        "HintImageEnchance",
        "ImageGenResolutionFromImage",
        "ImageGenResolutionFromLatent",
        "ImageIntensityDetector",
        "ImageLuminanceDetector",
        "InpaintPreprocessor",
        "LeReS-DepthMapPreprocessor",
        "LineArtPreprocessor",
        "LineartStandardPreprocessor",
        "M-LSDPreprocessor",
        "Manga2Anime_LineArt_Preprocessor",
        "MaskOptFlow",
        "MediaPipe-FaceMeshPreprocessor",
        "MeshGraphormer-DepthMapPreprocessor",
        "MiDaS-DepthMapPreprocessor",
        "MiDaS-NormalMapPreprocessor",
        "OneFormer-ADE20K-SemSegPreprocessor",
        "OneFormer-COCO-SemSegPreprocessor",
        "OpenposePreprocessor",
        "PiDiNetPreprocessor",
        "PixelPerfectResolution",
        "SAMPreprocessor",
        "SavePoseKpsAsJsonFile",
        "ScribblePreprocessor",
        "Scribble_XDoG_Preprocessor",
        "SemSegPreprocessor",
        "ShufflePreprocessor",
        "TEEDPreprocessor",
        "TilePreprocessor",
        "UniFormer-SemSegPreprocessor",
        "Unimatch_OptFlowPreprocessor",
        "Zoe-DepthMapPreprocessor",
        "Zoe_DepthAnythingPreprocessor"
      ],
      "install_type": "git-clone",
      "description": "Plug-and-play ComfyUI node sets for making ControlNet hint images."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "pythongosssss/ComfyUI-Custom-Scripts",
    "url": "https://github.com/pythongosssss/ComfyUI-Custom-Scripts",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "pythongosssss",
      "title": "pythongosssss/ComfyUI-Custom-Scripts",
      "id": "pygos-script",
      "reference": "https://github.com/pythongosssss/ComfyUI-Custom-Scripts",
      "files": [
        "https://github.com/pythongosssss/ComfyUI-Custom-Scripts"
      ],
      "install_type": "git-clone",
      "description": "This extension provides: Auto Arrange Graph, Workflow SVG, Favicon Status, Image Feed, Latent Upscale By, Lock Nodes & Groups, Lora Subfolders, Preset Text, Show Text, Touch Support, Link Render Mode, Locking, Node Finder, Quick Nodes, Show Image On Menu, Show Text, Workflow Managements, Custom Widget Default Values"
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "UltimateSDUpscale",
    "url": "https://github.com/ssitu/ComfyUI_UltimateSDUpscale",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "ssitu",
      "title": "UltimateSDUpscale",
      "id": "usdu",
      "reference": "https://github.com/ssitu/ComfyUI_UltimateSDUpscale",
      "files": [
        "https://github.com/ssitu/ComfyUI_UltimateSDUpscale"
      ],
      "install_type": "git-clone",
      "description": "ComfyUI nodes for the Ultimate Stable Diffusion Upscale script by Coyote-A."
    },
    "nodes": [],
    "pip": [],
    "apt": [],
    "cached": "False"
  },
  {
    "name": "comfyui-reactor-node",
    "url": "https://github.com/Gourieff/ComfyUI-ReActor",
    "path": "custom_nodes",
    "fetch_type": "git-clone",
    "details": {
      "author": "Gourieff",
      "title": "comfyui-reactor-node",
      "reference": "https://github.com/Gourieff/ComfyUI-ReActor",
      "files": [
        "https://github.com/Gourieff/ComfyUI-ReActor"
      ],
      "install_type": "git-clone",
      "description": "The Fast and Simple Face Swap Extension Node for ComfyUI, based on ReActor SD-WebUI Face Swap Extension"
    },
    "nodes": [],
    "pip": [
      "onnxruntime"
    ],
    "apt": [],
    "cached": "False"
  }
]